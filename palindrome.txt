;PRINT NUMBERS

	org 0x7c00 ;(indica para o montador onde o programa ficará na memória quando executado)
	bits 16 ;(indica ao montador quais os tamanhos dos registradores)

	mov ax,0 ;(podemos mexer nos registradores ax, bx, cx,dx. Definimos um valor para o registrador ax)
	mov ds,ax ;(informamos pra bios em qual segmento estamos trabalhando, no caso 0. Usamos essa instrução pois não podemos jogar um valor diretamente em um 			registrador S)
	cli ;(limpa todas as interrupcoes que tenham sido chamadas no processador)

inicio:
	mov ax,4356
	call printi
	jmp fim


;===Comeco do procedimento printi de inteiros
printi:
	push ax ;(guardamos na pilha a posição de memoria do ax)
	push cx
	push bx
	push dx
	
	mov cx,0
	mov bx, 0xB800 ;(0xB800 é o endereço da placa de vídeo)
	mov es,bx ;(es=registrador de segmento extra, guardamos por enquanto o endereco de memoria da placa de vídeo)

	mov dx, 0
	mov bx, 10

.laco:
	push dx
	div bx	;resultado:  ax = ax/bx | dx = resto  SEMPRE O RESULTADO VAI PARA O AX E O RESTO PARA O DX, AUTOMATICAMENTE
	push ax
	
	mov ax, dx
	add ax,48
	
	mov di,cx
	mov [es:di], al
	add cx,2

	pop ax
	pop dx
	cmp ax, 0
	jne .laco
		
retorno:
	pop dx
	pop bx
	pop cx 
	pop ax
	ret

fim:	hlt
	times 510 - ($-$$) db 0 ;(comando do nasmi para contar quantos bytes ja foram colocados no programa até agora, serve para completarmos os 512 bytes)
	dw 0xaa55